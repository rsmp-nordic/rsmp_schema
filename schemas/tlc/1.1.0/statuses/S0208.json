{
  "description" : "Traffic Counting: Number of vehicles of given classification.\nThis status was introduced to improve performance in case traffic counting is done on all all detectors.",
  "allOf" : [
    {
      "properties" : {
        "n" : {
          "enum" : [
            "B",
            "C",
            "F",
            "L",
            "LS",
            "MC",
            "P",
            "PS",
            "SP",
            "start"
          ]
        }
      }
    },
    {
      "if" : {
        "required" : [
          "q"
        ],
        "properties" : {
          "q" : {
            "enum" : [
              "undefined",
              "unknown"
            ]
          }
        }
      },
      "then" : {
      },
      "else" : {
        "allOf" : [
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "start"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Time stamp for start of measuring. Format according to W3C\nXML dateTime with a resolution of 3 decimal places. All time stamps\nin UTC. E.g. 2009-10-02T14:34:34.341Z",
                  "$ref" : "../../../core/3.1.2/definitions.json#/timestamp"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "P"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of cars.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "PS"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of cars with trailers.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "L"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of trucks.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "LS"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of trucks with trailers.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "B"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of buses.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "SP"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of trams.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "MC"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of motor cycles.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "C"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of bicycles.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          },
          {
            "if" : {
              "required" : [
                "n"
              ],
              "properties" : {
                "n" : {
                  "const" : "F"
                }
              }
            },
            "then" : {
              "properties" : {
                "s" : {
                  "description" : "Number of pedestrians.\n- Value expressed as an integer with a range of 0-65535.\n- Contains data from all detector logics. Each detector logic is separated with a comma.\n- The value is set to \"-1\" if no data could be measured (e.g. detector fault)",
                  "$ref" : "../../../core/3.1.2/definitions.json#/integer_list"
                }
              }
            }
          }
        ]
      }
    }
  ]
}
